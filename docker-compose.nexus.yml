version: '3.8'

# ===========================================
# Pyxalix (DM) - Configuration NEXUS (local)
# ===========================================
# Environnement: Serveur Nexus (192.168.1.22)
# Usage: docker compose -f docker-compose.nexus.yml up -d
#
# Différences vs Production VPS:
# - Domain: dm.nexus.local (au lieu de pyxalix.devamalix.fr)
# - EntryPoint: web (HTTP) au lieu de websecure (HTTPS)
# - Pas de certificat Let's Encrypt
# - Architecture identique pour tester avant déploiement prod

networks:
  # Network interne pour DB <-> Web
  dm-network:
    driver: bridge
    name: nexus-dm

  # Network Traefik externe (doit déjà exister)
  traefik-network:
    external: true
    name: traefik-network

services:
  db:
    image: postgres:16-alpine
    container_name: dm_postgres
    restart: unless-stopped

    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    # Port exposé pour debug (optionnel)
    ports:
      - "5432:5432"

    networks:
      - dm-network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dm_user} -d ${DB_NAME:-dm_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: dm_web
    restart: unless-stopped

    volumes:
      - .:/app
      # media/ is now served by nginx-static, no volume needed
      # - media_data:/app/media

    # Port exposé pour accès direct (fallback sans Traefik)
    ports:
      - "8000:8000"

    env_file:
      - .env

    # environment:
    #   - ENVIRONMENT=development  # Disabled: use data migrations like production

    depends_on:
      db:
        condition: service_healthy

    networks:
      - dm-network
      - traefik-network

    # Labels Traefik pour routage via dm.nexus.local
    labels:
      # Activation Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"

      # Router HTTP (pas HTTPS en local)
      # IMPORTANT: On exclut /media/ qui est servi par nginx-static
      - "traefik.http.routers.dm-web-nexus.rule=Host(`dm.nexus.local`) && !PathPrefix(`/media/`)"
      - "traefik.http.routers.dm-web-nexus.entrypoints=web"
      - "traefik.http.routers.dm-web-nexus.priority=1"

      # Service (port interne Django)
      - "traefik.http.services.dm-web-nexus.loadbalancer.server.port=8000"

volumes:
  postgres_data:
    driver: local
  # media_data removed: media files are now served by nginx-static
