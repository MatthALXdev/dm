version: '3.8'

# ===========================================
# Pyxalix (DM) - Production avec Traefik
# ===========================================
# Environnement: VPS Production (37.59.115.242)
# Usage: docker compose up -d
#
# Architecture:
# - Backend: Django + PostgreSQL
# - Traefik: Reverse proxy avec HTTPS automatique

networks:
  # Network interne pour DB <-> Web
  dm-network:
    driver: bridge
    name: pyxalix-network

  # Network Traefik externe (doit déjà exister sur VPS)
  traefik-network:
    external: true
    name: traefik-network

services:
  db:
    image: postgres:16-alpine
    container_name: pyxalix_postgres
    restart: unless-stopped

    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    # Port NON exposé en production (sécurité)
    # Accessible uniquement via network interne
    # ports:
    #   - "5432:5432"

    networks:
      - dm-network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dm_user} -d ${DB_NAME:-dm_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: pyxalix_web
    restart: unless-stopped

    volumes:
      - .:/app
      # media/ is now served by nginx-static, no volume needed
      # - media_data:/app/media

    # Port NON exposé en production
    # Accessible uniquement via Traefik
    # ports:
    #   - "8000:8000"

    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy

    networks:
      - dm-network
      - traefik-network

    # Labels Traefik pour routage HTTPS
    labels:
      # Activation Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"

      # Router HTTPS
      - "traefik.http.routers.pyxalix-web.rule=Host(`pyxalix.devamalix.fr`)"
      - "traefik.http.routers.pyxalix-web.entrypoints=websecure"
      - "traefik.http.routers.pyxalix-web.tls.certresolver=letsencrypt"

      # Service (port interne Django)
      - "traefik.http.services.pyxalix-web.loadbalancer.server.port=8000"

      # Watchtower auto-update (optionnel)
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  postgres_data:
    driver: local
  # media_data removed: media files are now served by nginx-static
